version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3

commands:
# Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
# Define the jobs we want to run for this project
jobs:

# Exercise: Infrastructure creation
  create_infrastructure:  # Choose any name, such as `build`
      # The primary container, where your job's commands will run
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout # check out the code in the project directory
        - run: 
            name: Create Cloudformation Stack # run the command
            command: |
              aws cloudformation deploy \
                --template-file infra.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1

        - destroy_environment


# Exercise: Config and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.10-alpine3.14
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["c3:0e:86:e4:17:90:22:49:1c:27:9f:49:9d:a4:0e:37"] 
      - run:
          name: Install Ansible
          command: |
            apk add --no-cache aws-cli
            pip install --upgrade pip
            python3 -m pip install ansible
            ansible --version
            apk add openssh-client
            
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory.txt playbook-config.yml 

# Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi
      - destroy_environment

# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      #- create_infrastructure
      - configure_infrastructure
     # - smoke_test